{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import'./EatsApp.css';import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import UpgradeTab from'./components/UpgradeTab';import BoostTab from'./components/BoostTab';import TasksTab from'./components/TasksTab';import SettingsButton from'./components/SettingsButton';import clickerImage from'../public/clicker-image.png';import SoonTab from'./components/SoonTab';import UniverseData from'./UniverseData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DamageIndicator=_ref=>{let{x,y,damage}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"damage-indicator\",style:{left:x,top:y},children:damage});};function EatsApp(_ref2){let{setIsTabOpen}=_ref2;const[gameState,setGameState]=useState({totalClicks:0,energy:1000,energyMax:1000,regenRate:1,damageLevel:1,energyLevel:1,regenLevel:1});const[count,setCount]=useState(0);const[activeTab,setActiveTab]=useState(null);const[isImageDistorted,setIsImageDistorted]=useState(false);const[isTabOpenState,setIsTabOpenState]=useState(false);const[showButtons,setShowButtons]=useState(true);const[damageIndicators,setDamageIndicators]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const activityTimeoutRef=useRef(null);const clickerRef=useRef(null);useEffect(()=>{async function initializeData(){try{const userData=await UniverseData.getUserData();setGameState(userData);setIsLoading(false);}catch(error){console.error('Ошибка при инициализации данных:',error);setError('Не удалось загрузить данные. Пожалуйста, попробуйте позже.');setIsLoading(false);}}initializeData();},[]);useEffect(()=>{const interval=setInterval(async()=>{if(gameState.energy<gameState.energyMax){const newEnergy=Math.min(gameState.energy+gameState.regenRate,gameState.energyMax);try{const updatedData=await UniverseData.setEnergy(newEnergy);setGameState(prev=>({...prev,...updatedData}));}catch(error){console.error('Ошибка при обновлении энергии:',error);}}},1000);return()=>clearInterval(interval);},[gameState.energy,gameState.energyMax,gameState.regenRate]);const handleInteraction=useCallback(async e=>{e.preventDefault();setIsImageDistorted(true);const rect=clickerRef.current.getBoundingClientRect();const x=e.clientX||e.touches&&e.touches[0].clientX;const y=e.clientY||e.touches&&e.touches[0].clientY;const newIndicator={id:Date.now()+Math.random(),x:x-rect.left,y:y-rect.top,damage:gameState.damageLevel};setDamageIndicators(prev=>[...prev,newIndicator]);setTimeout(()=>{setDamageIndicators(prev=>prev.filter(indicator=>indicator.id!==newIndicator.id));},1000);try{const updatedData=await UniverseData.incrementTotalClicks(gameState.damageLevel);const newEnergy=Math.max(gameState.energy-10,0);const energyUpdateData=await UniverseData.setEnergy(newEnergy);setGameState(prev=>({...prev,...updatedData,...energyUpdateData}));}catch(error){console.error('Ошибка при обработке клика:',error);setError('Произошла ошибка. Пожалуйста, попробуйте еще раз.');}if(activityTimeoutRef.current){clearTimeout(activityTimeoutRef.current);}activityTimeoutRef.current=setTimeout(()=>{setIsImageDistorted(false);},200);},[gameState.damageLevel,gameState.energy]);useEffect(()=>{const clicker=clickerRef.current;if(clicker){clicker.addEventListener('click',handleInteraction);clicker.addEventListener('touchstart',handleInteraction,{passive:false});return()=>{clicker.removeEventListener('click',handleInteraction);clicker.removeEventListener('touchstart',handleInteraction);};}},[handleInteraction]);const handleTabOpen=tab=>{setActiveTab(tab);setIsTabOpenState(true);setIsTabOpen(true);setShowButtons(false);};const handleBackButtonClick=()=>{setActiveTab(null);setIsTabOpenState(false);setIsTabOpen(false);setShowButtons(true);};const handleUpgrade=async type=>{try{let cost;switch(type){case'damage':cost=1000*Math.pow(2,gameState.damageLevel-1);break;case'energy':cost=1000*Math.pow(2,gameState.energyLevel-1);break;case'regen':cost=50000*Math.pow(2,gameState.regenLevel-1);break;default:throw new Error('Неизвестный тип улучшения');}if(gameState.totalClicks>=cost){const updatedData=await UniverseData.upgradeAttribute(type,cost);setGameState(prev=>({...prev,...updatedData}));}}catch(error){console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0443\\u043B\\u0443\\u0447\\u0448\\u0435\\u043D\\u0438\\u0438 \".concat(type,\":\"),error);setError('Не удалось выполнить улучшение. Пожалуйста, попробуйте позже.');}};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \",error]});}const tabContent=(()=>{switch(activeTab){case'UPGRADE':return/*#__PURE__*/_jsx(UpgradeTab,{totalClicks:gameState.totalClicks,damageLevel:gameState.damageLevel,energyLevel:gameState.energyLevel,regenLevel:gameState.regenLevel,handleDamageUpgrade:()=>handleUpgrade('damage'),handleEnergyUpgrade:()=>handleUpgrade('energy'),handleRegenUpgrade:()=>handleUpgrade('regen')});case'BOOST':return/*#__PURE__*/_jsx(BoostTab,{});case'TASKS':return/*#__PURE__*/_jsx(TasksTab,{});case'SOON':return/*#__PURE__*/_jsx(SoonTab,{});default:return null;}})();const remainingEnergyPercentage=(gameState.energyMax-gameState.energy)/gameState.energyMax*100;return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(SettingsButton,{isActive:activeTab!==null}),/*#__PURE__*/_jsxs(\"div\",{className:\"balance-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Balance Icon\",className:\"balance-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:gameState.totalClicks})]}),/*#__PURE__*/_jsx(\"div\",{className:\"energy-container\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Energy: \",Math.floor(gameState.energy),\"/\",gameState.energyMax]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"clicker-container\",ref:clickerRef,children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Clicker\",className:\"clicker-image \".concat(isImageDistorted?'distorted':'')}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-circle\",style:{boxShadow:'0px 0px 10px 5px gray'},children:/*#__PURE__*/_jsx(CircularProgressbar,{value:remainingEnergyPercentage,maxValue:100,styles:buildStyles({pathColor:'#b20bff',textColor:'#fff',trailColor:'#07ffff',backgroundColor:'#07ffff'})})}),damageIndicators.map(indicator=>/*#__PURE__*/_jsx(DamageIndicator,{x:indicator.x,y:indicator.y,damage:indicator.damage},indicator.id))]}),showButtons&&/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='UPGRADE'?'active':'',onClick:()=>handleTabOpen('UPGRADE'),children:\"UPGRADE\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='BOOST'?'active':'',onClick:()=>handleTabOpen('BOOST'),children:\"GAMES\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='TASKS'?'active':'',onClick:()=>handleTabOpen('TASKS'),children:\"TASKS\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='SOON'?'active':'',onClick:()=>handleTabOpen('SOON'),children:\"REF\"})]}),isTabOpenState&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content \".concat(isTabOpenState?'open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:handleBackButtonClick,children:\"Back\"}),tabContent]})]})});}export default EatsApp;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","CircularProgressbar","buildStyles","UpgradeTab","BoostTab","TasksTab","SettingsButton","clickerImage","SoonTab","UniverseData","jsx","_jsx","jsxs","_jsxs","DamageIndicator","_ref","x","y","damage","className","style","left","top","children","EatsApp","_ref2","setIsTabOpen","gameState","setGameState","totalClicks","energy","energyMax","regenRate","damageLevel","energyLevel","regenLevel","count","setCount","activeTab","setActiveTab","isImageDistorted","setIsImageDistorted","isTabOpenState","setIsTabOpenState","showButtons","setShowButtons","damageIndicators","setDamageIndicators","isLoading","setIsLoading","error","setError","activityTimeoutRef","clickerRef","initializeData","userData","getUserData","console","interval","setInterval","newEnergy","Math","min","updatedData","setEnergy","prev","clearInterval","handleInteraction","e","preventDefault","rect","current","getBoundingClientRect","clientX","touches","clientY","newIndicator","id","Date","now","random","setTimeout","filter","indicator","incrementTotalClicks","max","energyUpdateData","clearTimeout","clicker","addEventListener","passive","removeEventListener","handleTabOpen","tab","handleBackButtonClick","handleUpgrade","type","cost","pow","Error","upgradeAttribute","concat","tabContent","handleDamageUpgrade","handleEnergyUpgrade","handleRegenUpgrade","remainingEnergyPercentage","isActive","src","alt","floor","ref","boxShadow","value","maxValue","styles","pathColor","textColor","trailColor","backgroundColor","map","onClick"],"sources":["C:/Users/valery-sm/Frontend_GWC/src/Universes/EWI/src/EatsApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png';\nimport SoonTab from './components/SoonTab';\nimport UniverseData from './UniverseData';\n\nconst DamageIndicator = ({ x, y, damage }) => (\n  <div className=\"damage-indicator\" style={{ left: x, top: y }}>\n    {damage}\n  </div>\n);\n\nfunction EatsApp({ setIsTabOpen }) {\n  const [gameState, setGameState] = useState({\n    totalClicks: 0,\n    energy: 1000,\n    energyMax: 1000,\n    regenRate: 1,\n    damageLevel: 1,\n    energyLevel: 1,\n    regenLevel: 1,\n  });\n  const [count, setCount] = useState(0);\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [isTabOpenState, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n  const [damageIndicators, setDamageIndicators] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const activityTimeoutRef = useRef(null);\n  const clickerRef = useRef(null);\n\n  useEffect(() => {\n    async function initializeData() {\n      try {\n        const userData = await UniverseData.getUserData();\n        setGameState(userData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Ошибка при инициализации данных:', error);\n        setError('Не удалось загрузить данные. Пожалуйста, попробуйте позже.');\n        setIsLoading(false);\n      }\n    }\n\n    initializeData();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (gameState.energy < gameState.energyMax) {\n        const newEnergy = Math.min(gameState.energy + gameState.regenRate, gameState.energyMax);\n        try {\n          const updatedData = await UniverseData.setEnergy(newEnergy);\n          setGameState(prev => ({ ...prev, ...updatedData }));\n        } catch (error) {\n          console.error('Ошибка при обновлении энергии:', error);\n        }\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [gameState.energy, gameState.energyMax, gameState.regenRate]);\n\n  const handleInteraction = useCallback(async (e) => {\n    e.preventDefault();\n    setIsImageDistorted(true);\n\n    const rect = clickerRef.current.getBoundingClientRect();\n    const x = e.clientX || (e.touches && e.touches[0].clientX);\n    const y = e.clientY || (e.touches && e.touches[0].clientY);\n\n    const newIndicator = {\n      id: Date.now() + Math.random(),\n      x: x - rect.left,\n      y: y - rect.top,\n      damage: gameState.damageLevel\n    };\n\n    setDamageIndicators(prev => [...prev, newIndicator]);\n\n    setTimeout(() => {\n      setDamageIndicators(prev => prev.filter(indicator => indicator.id !== newIndicator.id));\n    }, 1000);\n\n    try {\n      const updatedData = await UniverseData.incrementTotalClicks(gameState.damageLevel);\n      const newEnergy = Math.max(gameState.energy - 10, 0);\n      const energyUpdateData = await UniverseData.setEnergy(newEnergy);\n\n      setGameState(prev => ({\n        ...prev,\n        ...updatedData,\n        ...energyUpdateData,\n      }));\n    } catch (error) {\n      console.error('Ошибка при обработке клика:', error);\n      setError('Произошла ошибка. Пожалуйста, попробуйте еще раз.');\n    }\n\n    if (activityTimeoutRef.current) {\n      clearTimeout(activityTimeoutRef.current);\n    }\n    \n    activityTimeoutRef.current = setTimeout(() => {\n      setIsImageDistorted(false);\n    }, 200);\n  }, [gameState.damageLevel, gameState.energy]);\n\n  useEffect(() => {\n    const clicker = clickerRef.current;\n    if (clicker) {\n      clicker.addEventListener('click', handleInteraction);\n      clicker.addEventListener('touchstart', handleInteraction, { passive: false });\n      \n      return () => {\n        clicker.removeEventListener('click', handleInteraction);\n        clicker.removeEventListener('touchstart', handleInteraction);\n      };\n    }\n  }, [handleInteraction]);\n\n  const handleTabOpen = (tab) => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setIsTabOpen(true);\n    setShowButtons(false);\n  };\n\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setIsTabOpen(false);\n    setShowButtons(true);\n  };\n\n  const handleUpgrade = async (type) => {\n    try {\n      let cost;\n      switch (type) {\n        case 'damage':\n          cost = 1000 * Math.pow(2, gameState.damageLevel - 1);\n          break;\n        case 'energy':\n          cost = 1000 * Math.pow(2, gameState.energyLevel - 1);\n          break;\n        case 'regen':\n          cost = 50000 * Math.pow(2, gameState.regenLevel - 1);\n          break;\n        default:\n          throw new Error('Неизвестный тип улучшения');\n      }\n\n      if (gameState.totalClicks >= cost) {\n        const updatedData = await UniverseData.upgradeAttribute(type, cost);\n        setGameState(prev => ({\n          ...prev,\n          ...updatedData,\n        }));\n      }\n    } catch (error) {\n      console.error(`Ошибка при улучшении ${type}:`, error);\n      setError('Не удалось выполнить улучшение. Пожалуйста, попробуйте позже.');\n    }\n  };\n\n  if (isLoading) {\n    return <div>Загрузка данных...</div>;\n  }\n\n  if (error) {\n    return <div>Ошибка: {error}</div>;\n  }\n\n  const tabContent = (() => {\n    switch (activeTab) {\n      case 'UPGRADE':\n        return (\n          <UpgradeTab\n            totalClicks={gameState.totalClicks}\n            damageLevel={gameState.damageLevel}\n            energyLevel={gameState.energyLevel}\n            regenLevel={gameState.regenLevel}\n            handleDamageUpgrade={() => handleUpgrade('damage')}\n            handleEnergyUpgrade={() => handleUpgrade('energy')}\n            handleRegenUpgrade={() => handleUpgrade('regen')}\n          />\n        );\n      case 'BOOST':\n        return <BoostTab />;\n      case 'TASKS':\n        return <TasksTab />;\n      case 'SOON':\n        return <SoonTab />;\n      default:\n        return null;\n    }\n  })();\n\n  const remainingEnergyPercentage = ((gameState.energyMax - gameState.energy) / gameState.energyMax) * 100;\n\n  return (\n    <div className={`App`}>\n      <header className=\"App-header\">\n        <SettingsButton isActive={activeTab !== null} /> \n        <div className=\"balance-container\">\n          <img src={clickerImage} alt=\"Balance Icon\" className=\"balance-icon\" />\n          <p>{gameState.totalClicks}</p>\n        </div>\n        <div className=\"energy-container\">\n          <p>Energy: {Math.floor(gameState.energy)}/{gameState.energyMax}</p>\n        </div>\n        <div className=\"clicker-container\"\n             ref={clickerRef}>\n          <img src={clickerImage} alt=\"Clicker\" className={`clicker-image ${isImageDistorted ? 'distorted' : ''}`} />\n          <div className=\"progress-circle\" style={{ boxShadow: '0px 0px 10px 5px gray' }}>\n            <CircularProgressbar\n              value={remainingEnergyPercentage}\n              maxValue={100}\n              styles={buildStyles({\n                pathColor: '#b20bff',\n                textColor: '#fff',\n                trailColor: '#07ffff',\n                backgroundColor: '#07ffff',\n              })}\n            />\n          </div>\n          {damageIndicators.map(indicator => (\n            <DamageIndicator key={indicator.id} x={indicator.x} y={indicator.y} damage={indicator.damage} />\n          ))}\n        </div>\n        {showButtons && (\n          <div className=\"tabs\">\n            <button className={activeTab === 'UPGRADE' ? 'active' : ''} onClick={() => handleTabOpen('UPGRADE')}>\n              UPGRADE\n            </button>\n            <button className={activeTab === 'BOOST' ? 'active' : ''} onClick={() => handleTabOpen('BOOST')}>\n              GAMES\n            </button>\n            <button className={activeTab === 'TASKS' ? 'active' : ''} onClick={() => handleTabOpen('TASKS')}>\n              TASKS\n            </button>\n            <button className={activeTab === 'SOON' ? 'active' : ''} onClick={() => handleTabOpen('SOON')}>\n              REF\n            </button>\n          </div>\n        )}\n        {isTabOpenState && (\n          <div className={`tab-content ${isTabOpenState ? 'open' : ''}`}>\n            <button className=\"back-button\" onClick={handleBackButtonClick}>Back</button>\n            {tabContent}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default EatsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}