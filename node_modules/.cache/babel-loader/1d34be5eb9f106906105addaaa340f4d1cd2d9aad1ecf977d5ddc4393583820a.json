{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import axios from'axios';import'./EatsApp.css';import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import UpgradeTab from'./components/UpgradeTab';import BoostTab from'./components/BoostTab';import TasksTab from'./components/TasksTab';import SettingsButton from'./components/SettingsButton';import clickerImage from'../public/clicker-image.png';import SoonTab from'./components/SoonTab';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BACKEND_URL='https://backend-gwc.onrender.com';const DamageIndicator=_ref=>{let{x,y,damage}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"damage-indicator\",style:{left:x,top:y},children:damage});};function EatsApp(_ref2){let{userData}=_ref2;// Лог для проверки данных, которые получаем из App.js\nconsole.log('EatsApp received userData:',userData);const[gameState,setGameState]=useState(userData||{});const[activeTab,setActiveTab]=useState(null);const[isImageDistorted,setIsImageDistorted]=useState(false);const[isTabOpenState,setIsTabOpenState]=useState(false);const[showButtons,setShowButtons]=useState(true);const[damageIndicators,setDamageIndicators]=useState([]);const[error,setError]=useState(null);const activityTimeoutRef=useRef(null);const clickerRef=useRef(null);useEffect(()=>{if(userData){console.log('Updating gameState with userData:',userData);// Лог для обновления состояния\nsetGameState(userData);}},[userData]);const handleInteraction=useCallback(async e=>{if(!userData||!userData.telegram_id){console.error('No user data or telegram_id found!');return;}e.preventDefault();setIsImageDistorted(true);const rect=clickerRef.current.getBoundingClientRect();const x=e.clientX||e.touches&&e.touches[0].clientX;const y=e.clientY||e.touches&&e.touches[0].clientY;const newIndicator={id:Date.now()+Math.random(),x:x-rect.left,y:y-rect.top,damage:gameState.damageLevel};setDamageIndicators(prev=>[...prev,newIndicator]);setTimeout(()=>{setDamageIndicators(prev=>prev.filter(indicator=>indicator.id!==newIndicator.id));},1000);try{const newTotalClicks=gameState.totalClicks+gameState.damageLevel;const newEnergy=Math.max(gameState.energy-10,0);const response=await axios.post(\"\".concat(BACKEND_URL,\"/update\"),{user_id:userData.telegram_id,updates:{totalClicks:newTotalClicks,energy:newEnergy}});console.log('Game state updated:',response.data);setGameState(response.data);}catch(error){console.error('Error updating game state:',error);setError('Failed to update game state. Please try again.');}if(activityTimeoutRef.current){clearTimeout(activityTimeoutRef.current);}activityTimeoutRef.current=setTimeout(()=>{setIsImageDistorted(false);},200);},[gameState,userData]);useEffect(()=>{const clicker=clickerRef.current;if(clicker){clicker.addEventListener('click',handleInteraction);clicker.addEventListener('touchstart',handleInteraction,{passive:false});return()=>{clicker.removeEventListener('click',handleInteraction);clicker.removeEventListener('touchstart',handleInteraction);};}},[handleInteraction]);const handleTabOpen=tab=>{setActiveTab(tab);setIsTabOpenState(true);setShowButtons(false);};const handleBackButtonClick=()=>{setActiveTab(null);setIsTabOpenState(false);setShowButtons(true);};const handleUpgrade=async type=>{if(!userData||!userData.telegram_id){console.error('No user data or telegram_id found for upgrade!');return;}try{let cost;switch(type){case'damage':cost=1000*Math.pow(2,gameState.damageLevel-1);break;case'energy':cost=1000*Math.pow(2,gameState.energyLevel-1);break;case'regen':cost=50000*Math.pow(2,gameState.regenLevel-1);break;default:throw new Error('Unknown upgrade type');}if(gameState.totalClicks>=cost){const response=await axios.post(\"\".concat(BACKEND_URL,\"/update\"),{user_id:userData.telegram_id,updates:{[\"\".concat(type,\"Level\")]:gameState[\"\".concat(type,\"Level\")]+1,totalClicks:gameState.totalClicks-cost}});console.log(\"\".concat(type,\" upgraded:\"),response.data);setGameState(response.data);}}catch(error){console.error(\"Error upgrading \".concat(type,\":\"),error);setError('Failed to upgrade. Please try again later.');}};// Если данных нет, выводим сообщение об ошибке\nif(!userData||!userData.telegram_id||userData.totalClicks===undefined){console.error('Invalid user data:',userData);return/*#__PURE__*/_jsx(\"div\",{children:\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0442\\u043E\\u0447\\u043D\\u043E \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \",error]});}const tabContent=(()=>{switch(activeTab){case'UPGRADE':return/*#__PURE__*/_jsx(UpgradeTab,{totalClicks:gameState.totalClicks,damageLevel:gameState.damageLevel,energyLevel:gameState.energyLevel,regenLevel:gameState.regenLevel,handleUpgrade:handleUpgrade,handleBackButtonClick:handleBackButtonClick});case'BOOST':return/*#__PURE__*/_jsx(BoostTab,{});case'TASKS':return/*#__PURE__*/_jsx(TasksTab,{});case'SETTINGS':return/*#__PURE__*/_jsx(SoonTab,{});default:return null;}})();return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-tab\",children:tabContent}),/*#__PURE__*/_jsxs(\"div\",{className:\"clicker-container\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"clicker-image \".concat(isImageDistorted?'distorted':''),ref:clickerRef,src:clickerImage,alt:\"Clicker\"}),damageIndicators.map(indicator=>/*#__PURE__*/_jsx(DamageIndicator,{...indicator},indicator.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-footer \".concat(showButtons?'visible':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"footer-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabOpen('UPGRADE'),children:\"Upgrade\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabOpen('BOOST'),children:\"Boost\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTabOpen('TASKS'),children:\"Tasks\"}),/*#__PURE__*/_jsx(SettingsButton,{handleTabOpen:handleTabOpen})]})})]});}export default EatsApp;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","CircularProgressbar","buildStyles","UpgradeTab","BoostTab","TasksTab","SettingsButton","clickerImage","SoonTab","jsx","_jsx","jsxs","_jsxs","BACKEND_URL","DamageIndicator","_ref","x","y","damage","className","style","left","top","children","EatsApp","_ref2","userData","console","log","gameState","setGameState","activeTab","setActiveTab","isImageDistorted","setIsImageDistorted","isTabOpenState","setIsTabOpenState","showButtons","setShowButtons","damageIndicators","setDamageIndicators","error","setError","activityTimeoutRef","clickerRef","handleInteraction","e","telegram_id","preventDefault","rect","current","getBoundingClientRect","clientX","touches","clientY","newIndicator","id","Date","now","Math","random","damageLevel","prev","setTimeout","filter","indicator","newTotalClicks","totalClicks","newEnergy","max","energy","response","post","concat","user_id","updates","data","clearTimeout","clicker","addEventListener","passive","removeEventListener","handleTabOpen","tab","handleBackButtonClick","handleUpgrade","type","cost","pow","energyLevel","regenLevel","Error","undefined","tabContent","ref","src","alt","map","onClick"],"sources":["C:/Users/valery-sm/Frontend_GWC/src/Universes/EWI/src/EatsApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png';\nimport SoonTab from './components/SoonTab';\n\nconst BACKEND_URL = 'https://backend-gwc.onrender.com';\n\nconst DamageIndicator = ({ x, y, damage }) => (\n  <div className=\"damage-indicator\" style={{ left: x, top: y }}>\n    {damage}\n  </div>\n);\n\nfunction EatsApp({ userData }) {\n  // Лог для проверки данных, которые получаем из App.js\n  console.log('EatsApp received userData:', userData);\n\n  const [gameState, setGameState] = useState(userData || {});\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [isTabOpenState, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n  const [damageIndicators, setDamageIndicators] = useState([]);\n  const [error, setError] = useState(null);\n\n  const activityTimeoutRef = useRef(null);\n  const clickerRef = useRef(null);\n\n  useEffect(() => {\n    if (userData) {\n      console.log('Updating gameState with userData:', userData); // Лог для обновления состояния\n      setGameState(userData);\n    }\n  }, [userData]);\n\n  const handleInteraction = useCallback(async (e) => {\n    if (!userData || !userData.telegram_id) {\n      console.error('No user data or telegram_id found!');\n      return;\n    }\n\n    e.preventDefault();\n    setIsImageDistorted(true);\n\n    const rect = clickerRef.current.getBoundingClientRect();\n    const x = e.clientX || (e.touches && e.touches[0].clientX);\n    const y = e.clientY || (e.touches && e.touches[0].clientY);\n\n    const newIndicator = {\n      id: Date.now() + Math.random(),\n      x: x - rect.left,\n      y: y - rect.top,\n      damage: gameState.damageLevel\n    };\n\n    setDamageIndicators(prev => [...prev, newIndicator]);\n\n    setTimeout(() => {\n      setDamageIndicators(prev => prev.filter(indicator => indicator.id !== newIndicator.id));\n    }, 1000);\n\n    try {\n      const newTotalClicks = gameState.totalClicks + gameState.damageLevel;\n      const newEnergy = Math.max(gameState.energy - 10, 0);\n\n      const response = await axios.post(`${BACKEND_URL}/update`, {\n        user_id: userData.telegram_id,\n        updates: {\n          totalClicks: newTotalClicks,\n          energy: newEnergy\n        }\n      });\n\n      console.log('Game state updated:', response.data);\n      setGameState(response.data);\n    } catch (error) {\n      console.error('Error updating game state:', error);\n      setError('Failed to update game state. Please try again.');\n    }\n\n    if (activityTimeoutRef.current) {\n      clearTimeout(activityTimeoutRef.current);\n    }\n    \n    activityTimeoutRef.current = setTimeout(() => {\n      setIsImageDistorted(false);\n    }, 200);\n  }, [gameState, userData]);\n\n  useEffect(() => {\n    const clicker = clickerRef.current;\n    if (clicker) {\n      clicker.addEventListener('click', handleInteraction);\n      clicker.addEventListener('touchstart', handleInteraction, { passive: false });\n      \n      return () => {\n        clicker.removeEventListener('click', handleInteraction);\n        clicker.removeEventListener('touchstart', handleInteraction);\n      };\n    }\n  }, [handleInteraction]);\n\n  const handleTabOpen = (tab) => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setShowButtons(false);\n  };\n\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setShowButtons(true);\n  };\n\n  const handleUpgrade = async (type) => {\n    if (!userData || !userData.telegram_id) {\n      console.error('No user data or telegram_id found for upgrade!');\n      return;\n    }\n\n    try {\n      let cost;\n      switch (type) {\n        case 'damage':\n          cost = 1000 * Math.pow(2, gameState.damageLevel - 1);\n          break;\n        case 'energy':\n          cost = 1000 * Math.pow(2, gameState.energyLevel - 1);\n          break;\n        case 'regen':\n          cost = 50000 * Math.pow(2, gameState.regenLevel - 1);\n          break;\n        default:\n          throw new Error('Unknown upgrade type');\n      }\n\n      if (gameState.totalClicks >= cost) {\n        const response = await axios.post(`${BACKEND_URL}/update`, {\n          user_id: userData.telegram_id,\n          updates: {\n            [`${type}Level`]: gameState[`${type}Level`] + 1,\n            totalClicks: gameState.totalClicks - cost\n          }\n        });\n        console.log(`${type} upgraded:`, response.data);\n        setGameState(response.data);\n      }\n    } catch (error) {\n      console.error(`Error upgrading ${type}:`, error);\n      setError('Failed to upgrade. Please try again later.');\n    }\n  };\n\n  // Если данных нет, выводим сообщение об ошибке\n  if (!userData || !userData.telegram_id || userData.totalClicks === undefined) {\n    console.error('Invalid user data:', userData);\n    return <div>Ошибка: Недостаточно данных пользователя</div>;\n  }\n\n  if (error) {\n    return <div>Ошибка: {error}</div>;\n  }\n\n  const tabContent = (() => {\n    switch (activeTab) {\n      case 'UPGRADE':\n        return (\n          <UpgradeTab\n            totalClicks={gameState.totalClicks}\n            damageLevel={gameState.damageLevel}\n            energyLevel={gameState.energyLevel}\n            regenLevel={gameState.regenLevel}\n            handleUpgrade={handleUpgrade}\n            handleBackButtonClick={handleBackButtonClick}\n          />\n        );\n      case 'BOOST':\n        return <BoostTab />;\n      case 'TASKS':\n        return <TasksTab />;\n      case 'SETTINGS':\n        return <SoonTab />;\n      default:\n        return null;\n    }\n  })();\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"main-tab\">{tabContent}</div>\n      <div className=\"clicker-container\">\n        <img\n          className={`clicker-image ${isImageDistorted ? 'distorted' : ''}`}\n          ref={clickerRef}\n          src={clickerImage}\n          alt=\"Clicker\"\n        />\n        {damageIndicators.map((indicator) => (\n          <DamageIndicator key={indicator.id} {...indicator} />\n        ))}\n      </div>\n\n      <div className={`game-footer ${showButtons ? 'visible' : ''}`}>\n        <div className=\"footer-buttons\">\n          <button onClick={() => handleTabOpen('UPGRADE')}>Upgrade</button>\n          <button onClick={() => handleTabOpen('BOOST')}>Boost</button>\n          <button onClick={() => handleTabOpen('TASKS')}>Tasks</button>\n          <SettingsButton handleTabOpen={handleTabOpen} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EatsApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}