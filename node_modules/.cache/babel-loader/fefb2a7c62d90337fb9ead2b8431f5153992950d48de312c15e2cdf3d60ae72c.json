{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import'./EatsApp.css';import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import UpgradeTab from'./components/UpgradeTab';import BoostTab from'./components/BoostTab';import TasksTab from'./components/TasksTab';import SettingsButton from'./components/SettingsButton';import clickerImage from'../public/clicker-image.png';import SoonTab from'./components/SoonTab';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BACKEND_URL='https://backend-gwc.onrender.com';function sendLog(message){fetch(\"\".concat(BACKEND_URL,\"/log\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message})}).catch(error=>console.error('Error sending log:',error));}const DamageIndicator=_ref=>{let{x,y,damage}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"damage-indicator\",style:{left:x,top:y},children:damage});};function EatsApp(_ref2){let{userData}=_ref2;sendLog(\"EatsApp received userData: \".concat(JSON.stringify(userData)));if(!userData){sendLog('EatsApp received null or undefined userData');return/*#__PURE__*/_jsx(\"div\",{children:\"Error: Invalid user data\"});}const[totalClicks,setTotalClicks]=useState(userData.totalClicks);const[count,setCount]=useState(0);const[activeTab,setActiveTab]=useState(null);const[isImageDistorted,setIsImageDistorted]=useState(false);const[isTabOpenState,setIsTabOpenState]=useState(false);const[showButtons,setShowButtons]=useState(true);const[damageIndicators,setDamageIndicators]=useState([]);const[energy,setEnergy]=useState(userData.energy);const[energyMax,setEnergyMax]=useState(userData.energyMax);const[regenRate,setRegenRate]=useState(userData.regenRate);const[damageLevel,setDamageLevel]=useState(userData.damageLevel);const[energyLevel,setEnergyLevel]=useState(userData.energyLevel);const[regenLevel,setRegenLevel]=useState(userData.regenLevel);const damageUpgradeCost=1000*Math.pow(2,damageLevel-1);const energyUpgradeCost=1000*Math.pow(2,energyLevel-1);const regenUpgradeCost=50000*Math.pow(2,regenLevel-1);const activityTimeoutRef=useRef(null);const clickerRef=useRef(null);const sendUpdatesToServer=useCallback(async updates=>{try{sendLog(\"Sending updates to server: \".concat(JSON.stringify(updates)));const response=await fetch(\"\".concat(BACKEND_URL,\"/update\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:userData.user_id,updates:updates})});if(!response.ok){throw new Error(\"Server responded with \".concat(response.status));}sendLog('Updates sent successfully');}catch(error){sendLog(\"Error sending updates to server: \".concat(error.message));}},[userData.user_id]);const handleClick=useCallback(()=>{if(energy>0){const newTotalClicks=totalClicks+damageLevel;const newEnergy=Math.max(0,energy-1);setTotalClicks(newTotalClicks);setEnergy(newEnergy);setCount(prevCount=>prevCount+1);sendUpdatesToServer({totalClicks:newTotalClicks,energy:newEnergy});}},[damageLevel,energy,totalClicks,sendUpdatesToServer]);const handleTabOpen=tab=>{setActiveTab(tab);setIsTabOpenState(true);setShowButtons(false);};const handleBackButtonClick=()=>{setActiveTab(null);setIsTabOpenState(false);setShowButtons(true);};const handleDamageUpgrade=()=>{if(totalClicks>=damageUpgradeCost){const newDamageLevel=damageLevel+1;const newTotalClicks=totalClicks-damageUpgradeCost;setDamageLevel(newDamageLevel);setTotalClicks(newTotalClicks);sendUpdatesToServer({damageLevel:newDamageLevel,totalClicks:newTotalClicks});}};const handleEnergyUpgrade=()=>{if(totalClicks>=energyUpgradeCost){const newEnergyLevel=energyLevel+1;const newEnergyMax=energyMax+100;const newTotalClicks=totalClicks-energyUpgradeCost;setEnergyLevel(newEnergyLevel);setEnergyMax(newEnergyMax);setTotalClicks(newTotalClicks);sendUpdatesToServer({energyLevel:newEnergyLevel,energyMax:newEnergyMax,totalClicks:newTotalClicks});}};const handleRegenUpgrade=()=>{if(totalClicks>=regenUpgradeCost){const newRegenLevel=regenLevel+1;const newRegenRate=regenRate+1;const newTotalClicks=totalClicks-regenUpgradeCost;setRegenLevel(newRegenLevel);setRegenRate(newRegenRate);setTotalClicks(newTotalClicks);sendUpdatesToServer({regenLevel:newRegenLevel,regenRate:newRegenRate,totalClicks:newTotalClicks});}};useEffect(()=>{const interval=setInterval(()=>{setEnergy(prevEnergy=>{if(prevEnergy<energyMax){const newEnergy=Math.min(prevEnergy+regenRate,energyMax);sendUpdatesToServer({energy:newEnergy});return newEnergy;}return prevEnergy;});},1000);return()=>clearInterval(interval);},[energyMax,regenRate,sendUpdatesToServer]);const handleInteraction=useCallback(e=>{e.preventDefault();setIsImageDistorted(true);const rect=clickerRef.current.getBoundingClientRect();const x=e.clientX||e.touches&&e.touches[0].clientX;const y=e.clientY||e.touches&&e.touches[0].clientY;const newIndicator={id:Date.now()+Math.random(),x:x-rect.left,y:y-rect.top,damage:damageLevel};setDamageIndicators(prev=>[...prev,newIndicator]);setTimeout(()=>{setDamageIndicators(prev=>prev.filter(indicator=>indicator.id!==newIndicator.id));},1000);handleClick();if(activityTimeoutRef.current){clearTimeout(activityTimeoutRef.current);}activityTimeoutRef.current=setTimeout(()=>{setIsImageDistorted(false);},200);},[damageLevel,handleClick]);useEffect(()=>{const clicker=clickerRef.current;if(clicker){clicker.addEventListener('click',handleInteraction);clicker.addEventListener('touchstart',handleInteraction,{passive:false});return()=>{clicker.removeEventListener('click',handleInteraction);clicker.removeEventListener('touchstart',handleInteraction);};}},[handleInteraction]);useEffect(()=>{// Обработчик события закрытия приложения\nconst handleClose=()=>{sendUpdatesToServer({totalClicks,energy,energyMax,regenRate,damageLevel,energyLevel,regenLevel});};if(window.Telegram&&window.Telegram.WebApp){window.Telegram.WebApp.onEvent('viewportChanged',handleClose);}return()=>{if(window.Telegram&&window.Telegram.WebApp){window.Telegram.WebApp.offEvent('viewportChanged',handleClose);}};},[totalClicks,energy,energyMax,regenRate,damageLevel,energyLevel,regenLevel,sendUpdatesToServer]);useEffect(()=>{sendLog('EatsApp mounted');return()=>{sendLog('EatsApp unmounted');};},[]);const remainingEnergyPercentage=(energyMax-energy)/energyMax*100;sendLog('Rendering EatsApp');return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(SettingsButton,{isActive:activeTab!==null}),/*#__PURE__*/_jsxs(\"div\",{className:\"balance-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Balance Icon\",className:\"balance-icon\"}),/*#__PURE__*/_jsx(\"p\",{children:totalClicks})]}),/*#__PURE__*/_jsx(\"div\",{className:\"energy-container\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Energy: \",Math.floor(energy),\"/\",energyMax]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"clicker-container\",ref:clickerRef,children:[/*#__PURE__*/_jsx(\"img\",{src:clickerImage,alt:\"Clicker\",className:\"clicker-image \".concat(isImageDistorted?'distorted':'')}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-circle\",style:{boxShadow:'0px 0px 10px 5px gray'},children:/*#__PURE__*/_jsx(CircularProgressbar,{value:remainingEnergyPercentage,maxValue:100,styles:buildStyles({pathColor:'#b20bff',textColor:'#fff',trailColor:'#07ffff',backgroundColor:'#07ffff'})})}),damageIndicators.map(indicator=>/*#__PURE__*/_jsx(DamageIndicator,{x:indicator.x,y:indicator.y,damage:indicator.damage},indicator.id))]}),showButtons&&/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab==='UPGRADE'?'active':'',onClick:()=>handleTabOpen('UPGRADE'),children:\"UPGRADE\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='BOOST'?'active':'',onClick:()=>handleTabOpen('BOOST'),children:\"GAMES\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='TASKS'?'active':'',onClick:()=>handleTabOpen('TASKS'),children:\"TASKS\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab==='SOON'?'active':'',onClick:()=>handleTabOpen('SOON'),children:\"REF\"})]}),isTabOpenState&&/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content \".concat(isTabOpenState?'open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:handleBackButtonClick,children:\"Back\"}),activeTab==='UPGRADE'&&/*#__PURE__*/_jsx(UpgradeTab,{totalClicks:totalClicks,damageUpgradeCost:damageUpgradeCost,energyUpgradeCost:energyUpgradeCost,regenUpgradeCost:regenUpgradeCost,damageLevel:damageLevel,energyLevel:energyLevel,regenLevel:regenLevel,handleDamageUpgrade:handleDamageUpgrade,handleEnergyUpgrade:handleEnergyUpgrade,handleRegenUpgrade:handleRegenUpgrade}),activeTab==='BOOST'&&/*#__PURE__*/_jsx(BoostTab,{}),activeTask==='TASKS'&&/*#__PURE__*/_jsx(TasksTab,{}),activeTab==='SOON'&&/*#__PURE__*/_jsx(SoonTab,{})]})]})});}export default EatsApp;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","CircularProgressbar","buildStyles","UpgradeTab","BoostTab","TasksTab","SettingsButton","clickerImage","SoonTab","jsx","_jsx","jsxs","_jsxs","BACKEND_URL","sendLog","message","fetch","concat","method","headers","body","JSON","stringify","catch","error","console","DamageIndicator","_ref","x","y","damage","className","style","left","top","children","EatsApp","_ref2","userData","totalClicks","setTotalClicks","count","setCount","activeTab","setActiveTab","isImageDistorted","setIsImageDistorted","isTabOpenState","setIsTabOpenState","showButtons","setShowButtons","damageIndicators","setDamageIndicators","energy","setEnergy","energyMax","setEnergyMax","regenRate","setRegenRate","damageLevel","setDamageLevel","energyLevel","setEnergyLevel","regenLevel","setRegenLevel","damageUpgradeCost","Math","pow","energyUpgradeCost","regenUpgradeCost","activityTimeoutRef","clickerRef","sendUpdatesToServer","updates","response","user_id","ok","Error","status","handleClick","newTotalClicks","newEnergy","max","prevCount","handleTabOpen","tab","handleBackButtonClick","handleDamageUpgrade","newDamageLevel","handleEnergyUpgrade","newEnergyLevel","newEnergyMax","handleRegenUpgrade","newRegenLevel","newRegenRate","interval","setInterval","prevEnergy","min","clearInterval","handleInteraction","e","preventDefault","rect","current","getBoundingClientRect","clientX","touches","clientY","newIndicator","id","Date","now","random","prev","setTimeout","filter","indicator","clearTimeout","clicker","addEventListener","passive","removeEventListener","handleClose","window","Telegram","WebApp","onEvent","offEvent","remainingEnergyPercentage","isActive","src","alt","floor","ref","boxShadow","value","maxValue","styles","pathColor","textColor","trailColor","backgroundColor","map","onClick","activeTask"],"sources":["C:/Users/valery-sm/Frontend_GWC/src/Universes/EWI/src/EatsApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './EatsApp.css';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport UpgradeTab from './components/UpgradeTab';\nimport BoostTab from './components/BoostTab';\nimport TasksTab from './components/TasksTab';\nimport SettingsButton from './components/SettingsButton';\nimport clickerImage from '../public/clicker-image.png';\nimport SoonTab from './components/SoonTab';\n\nconst BACKEND_URL = 'https://backend-gwc.onrender.com';\n\nfunction sendLog(message) {\n  fetch(`${BACKEND_URL}/log`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ message }),\n  }).catch(error => console.error('Error sending log:', error));\n}\n\nconst DamageIndicator = ({ x, y, damage }) => (\n  <div className=\"damage-indicator\" style={{ left: x, top: y }}>\n    {damage}\n  </div>\n);\n\nfunction EatsApp({ userData }) {\n  sendLog(`EatsApp received userData: ${JSON.stringify(userData)}`);\n\n  if (!userData) {\n    sendLog('EatsApp received null or undefined userData');\n    return <div>Error: Invalid user data</div>;\n  }\n\n  const [totalClicks, setTotalClicks] = useState(userData.totalClicks);\n  const [count, setCount] = useState(0);\n  const [activeTab, setActiveTab] = useState(null);\n  const [isImageDistorted, setIsImageDistorted] = useState(false);\n  const [isTabOpenState, setIsTabOpenState] = useState(false);\n  const [showButtons, setShowButtons] = useState(true);\n  const [damageIndicators, setDamageIndicators] = useState([]);\n\n  const [energy, setEnergy] = useState(userData.energy);\n  const [energyMax, setEnergyMax] = useState(userData.energyMax);\n  const [regenRate, setRegenRate] = useState(userData.regenRate);\n  const [damageLevel, setDamageLevel] = useState(userData.damageLevel);\n  const [energyLevel, setEnergyLevel] = useState(userData.energyLevel);\n  const [regenLevel, setRegenLevel] = useState(userData.regenLevel);\n\n  const damageUpgradeCost = 1000 * Math.pow(2, damageLevel - 1);\n  const energyUpgradeCost = 1000 * Math.pow(2, energyLevel - 1);\n  const regenUpgradeCost = 50000 * Math.pow(2, regenLevel - 1);\n\n  const activityTimeoutRef = useRef(null);\n  const clickerRef = useRef(null);\n\n  const sendUpdatesToServer = useCallback(async (updates) => {\n    try {\n      sendLog(`Sending updates to server: ${JSON.stringify(updates)}`);\n      const response = await fetch(`${BACKEND_URL}/update`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: userData.user_id,\n          updates: updates\n        }),\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      sendLog('Updates sent successfully');\n    } catch (error) {\n      sendLog(`Error sending updates to server: ${error.message}`);\n    }\n  }, [userData.user_id]);\n\n  const handleClick = useCallback(() => {\n    if (energy > 0) {\n      const newTotalClicks = totalClicks + damageLevel;\n      const newEnergy = Math.max(0, energy - 1);\n      \n      setTotalClicks(newTotalClicks);\n      setEnergy(newEnergy);\n      setCount(prevCount => prevCount + 1);\n      \n      sendUpdatesToServer({\n        totalClicks: newTotalClicks,\n        energy: newEnergy\n      });\n    }\n  }, [damageLevel, energy, totalClicks, sendUpdatesToServer]);\n\n  const handleTabOpen = (tab) => {\n    setActiveTab(tab);\n    setIsTabOpenState(true);\n    setShowButtons(false);\n  };\n\n  const handleBackButtonClick = () => {\n    setActiveTab(null);\n    setIsTabOpenState(false);\n    setShowButtons(true);\n  };\n\n  const handleDamageUpgrade = () => {\n    if (totalClicks >= damageUpgradeCost) {\n      const newDamageLevel = damageLevel + 1;\n      const newTotalClicks = totalClicks - damageUpgradeCost;\n      setDamageLevel(newDamageLevel);\n      setTotalClicks(newTotalClicks);\n      sendUpdatesToServer({\n        damageLevel: newDamageLevel,\n        totalClicks: newTotalClicks\n      });\n    }\n  };\n\n  const handleEnergyUpgrade = () => {\n    if (totalClicks >= energyUpgradeCost) {\n      const newEnergyLevel = energyLevel + 1;\n      const newEnergyMax = energyMax + 100;\n      const newTotalClicks = totalClicks - energyUpgradeCost;\n      setEnergyLevel(newEnergyLevel);\n      setEnergyMax(newEnergyMax);\n      setTotalClicks(newTotalClicks);\n      sendUpdatesToServer({\n        energyLevel: newEnergyLevel,\n        energyMax: newEnergyMax,\n        totalClicks: newTotalClicks\n      });\n    }\n  };\n\n  const handleRegenUpgrade = () => {\n    if (totalClicks >= regenUpgradeCost) {\n      const newRegenLevel = regenLevel + 1;\n      const newRegenRate = regenRate + 1;\n      const newTotalClicks = totalClicks - regenUpgradeCost;\n      setRegenLevel(newRegenLevel);\n      setRegenRate(newRegenRate);\n      setTotalClicks(newTotalClicks);\n      sendUpdatesToServer({\n        regenLevel: newRegenLevel,\n        regenRate: newRegenRate,\n        totalClicks: newTotalClicks\n      });\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setEnergy(prevEnergy => {\n        if (prevEnergy < energyMax) {\n          const newEnergy = Math.min(prevEnergy + regenRate, energyMax);\n          sendUpdatesToServer({ energy: newEnergy });\n          return newEnergy;\n        }\n        return prevEnergy;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [energyMax, regenRate, sendUpdatesToServer]);\n\n  const handleInteraction = useCallback((e) => {\n    e.preventDefault();\n    setIsImageDistorted(true);\n\n    const rect = clickerRef.current.getBoundingClientRect();\n    const x = e.clientX || (e.touches && e.touches[0].clientX);\n    const y = e.clientY || (e.touches && e.touches[0].clientY);\n\n    const newIndicator = {\n      id: Date.now() + Math.random(),\n      x: x - rect.left,\n      y: y - rect.top,\n      damage: damageLevel\n    };\n\n    setDamageIndicators(prev => [...prev, newIndicator]);\n\n    setTimeout(() => {\n      setDamageIndicators(prev => prev.filter(indicator => indicator.id !== newIndicator.id));\n    }, 1000);\n\n    handleClick();\n\n    if (activityTimeoutRef.current) {\n      clearTimeout(activityTimeoutRef.current);\n    }\n    \n    activityTimeoutRef.current = setTimeout(() => {\n      setIsImageDistorted(false);\n    }, 200);\n  }, [damageLevel, handleClick]);\n\n  useEffect(() => {\n    const clicker = clickerRef.current;\n    if (clicker) {\n      clicker.addEventListener('click', handleInteraction);\n      clicker.addEventListener('touchstart', handleInteraction, { passive: false });\n      \n      return () => {\n        clicker.removeEventListener('click', handleInteraction);\n        clicker.removeEventListener('touchstart', handleInteraction);\n      };\n    }\n  }, [handleInteraction]);\n\n  useEffect(() => {\n    // Обработчик события закрытия приложения\n    const handleClose = () => {\n      sendUpdatesToServer({\n        totalClicks,\n        energy,\n        energyMax,\n        regenRate,\n        damageLevel,\n        energyLevel,\n        regenLevel\n      });\n    };\n\n    if (window.Telegram && window.Telegram.WebApp) {\n      window.Telegram.WebApp.onEvent('viewportChanged', handleClose);\n    }\n\n    return () => {\n      if (window.Telegram && window.Telegram.WebApp) {\n        window.Telegram.WebApp.offEvent('viewportChanged', handleClose);\n      }\n    };\n  }, [totalClicks, energy, energyMax, regenRate, damageLevel, energyLevel, regenLevel, sendUpdatesToServer]);\n\n  useEffect(() => {\n    sendLog('EatsApp mounted');\n    return () => {\n      sendLog('EatsApp unmounted');\n    };\n  }, []);\n\n  const remainingEnergyPercentage = ((energyMax - energy) / energyMax) * 100;\n\n  sendLog('Rendering EatsApp');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SettingsButton isActive={activeTab !== null} />\n        <div className=\"balance-container\">\n          <img src={clickerImage} alt=\"Balance Icon\" className=\"balance-icon\" />\n          <p>{totalClicks}</p>\n        </div>\n        <div className=\"energy-container\">\n          <p>Energy: {Math.floor(energy)}/{energyMax}</p>\n        </div>\n        <div className=\"clicker-container\" ref={clickerRef}>\n          <img src={clickerImage} alt=\"Clicker\" className={`clicker-image ${isImageDistorted ? 'distorted' : ''}`} />\n          <div className=\"progress-circle\" style={{ boxShadow: '0px 0px 10px 5px gray' }}>\n            <CircularProgressbar\n              value={remainingEnergyPercentage}\n              maxValue={100}\n              styles={buildStyles({\n                pathColor: '#b20bff',\n                textColor: '#fff',\n                trailColor: '#07ffff',\n                backgroundColor: '#07ffff',\n              })}\n            />\n          </div>\n          {damageIndicators.map(indicator => (\n            <DamageIndicator key={indicator.id} x={indicator.x} y={indicator.y} damage={indicator.damage} />\n          ))}\n        </div>\n        {showButtons && (\n          <div className=\"tabs\">\n            <button className={activeTab === 'UPGRADE' ? 'active' : ''} onClick={() => handleTabOpen('UPGRADE')}>\n              UPGRADE\n            </button>\n            <button className={activeTab === 'BOOST' ? 'active' : ''} onClick={() => handleTabOpen('BOOST')}>\n              GAMES\n            </button>\n            <button className={activeTab === 'TASKS' ? 'active' : ''} onClick={() => handleTabOpen('TASKS')}>\n              TASKS\n            </button>\n            <button className={activeTab === 'SOON' ? 'active' : ''} onClick={() => handleTabOpen('SOON')}>\n              REF\n            </button>\n          </div>\n        )}\n        {isTabOpenState && (\n          <div className={`tab-content ${isTabOpenState ? 'open' : ''}`}>\n            <button className=\"back-button\" onClick={handleBackButtonClick}>Back</button>\n            {activeTab === 'UPGRADE' && (\n              <UpgradeTab\n                totalClicks={totalClicks}\n                damageUpgradeCost={damageUpgradeCost}\n                energyUpgradeCost={energyUpgradeCost}\n                regenUpgradeCost={regenUpgradeCost}\n                damageLevel={damageLevel}\n                energyLevel={energyLevel}\n                regenLevel={regenLevel}\n                handleDamageUpgrade={handleDamageUpgrade}\n                handleEnergyUpgrade={handleEnergyUpgrade}\n                handleRegenUpgrade={handleRegenUpgrade}\n              />\n            )}\n            {activeTab === 'BOOST' && <BoostTab />}\n            {activeTask === 'TASKS' && <TasksTab />}\n            {activeTab === 'SOON' && <SoonTab />}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default EatsApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}