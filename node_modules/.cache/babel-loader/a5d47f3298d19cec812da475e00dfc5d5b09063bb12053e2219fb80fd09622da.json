{"ast":null,"code":"const BACKEND_URL='https://backend-gwc.onrender.com';const UniverseData={userId:null,async initializeUser(userId){this.userId=userId;const response=await fetch(\"\".concat(BACKEND_URL,\"/auth\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:userId})});if(!response.ok)throw new Error('Failed to initialize user');return response.json();},async getUserData(){if(!this.userId)throw new Error('User not initialized');const response=await fetch(\"\".concat(BACKEND_URL,\"/auth\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:this.userId})});if(!response.ok)throw new Error('Failed to get user data');return response.json();},async updateUserData(updates){if(!this.userId)throw new Error('User not initialized');const response=await fetch(\"\".concat(BACKEND_URL,\"/update\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user_id:this.userId,updates})});if(!response.ok)throw new Error('Failed to update user data');return response.json();},async incrementTotalClicks(amount){return this.updateUserData({totalClicks:{$inc:amount}});},async setEnergy(newEnergy){return this.updateUserData({energy:newEnergy});},async upgradeAttribute(attribute,cost){return this.updateUserData({[\"\".concat(attribute,\"Level\")]:{$inc:1},totalClicks:{$inc:-cost}});}};export default UniverseData;","map":{"version":3,"names":["BACKEND_URL","UniverseData","userId","initializeUser","response","fetch","concat","method","headers","body","JSON","stringify","user_id","ok","Error","json","getUserData","updateUserData","updates","incrementTotalClicks","amount","totalClicks","$inc","setEnergy","newEnergy","energy","upgradeAttribute","attribute","cost"],"sources":["C:/Users/valery-sm/Frontend_GWC/src/Universes/EWI/src/UniverseData.js"],"sourcesContent":["const BACKEND_URL = 'https://backend-gwc.onrender.com';\r\n\r\nconst UniverseData = {\r\n  userId: null,\r\n  \r\n  async initializeUser(userId) {\r\n    this.userId = userId;\r\n    const response = await fetch(`${BACKEND_URL}/auth`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ user_id: userId }),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to initialize user');\r\n    return response.json();\r\n  },\r\n\r\n  async getUserData() {\r\n    if (!this.userId) throw new Error('User not initialized');\r\n    const response = await fetch(`${BACKEND_URL}/auth`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ user_id: this.userId }),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to get user data');\r\n    return response.json();\r\n  },\r\n\r\n  async updateUserData(updates) {\r\n    if (!this.userId) throw new Error('User not initialized');\r\n    const response = await fetch(`${BACKEND_URL}/update`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ user_id: this.userId, updates }),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to update user data');\r\n    return response.json();\r\n  },\r\n\r\n  async incrementTotalClicks(amount) {\r\n    return this.updateUserData({ totalClicks: { $inc: amount } });\r\n  },\r\n\r\n  async setEnergy(newEnergy) {\r\n    return this.updateUserData({ energy: newEnergy });\r\n  },\r\n\r\n  async upgradeAttribute(attribute, cost) {\r\n    return this.updateUserData({\r\n      [`${attribute}Level`]: { $inc: 1 },\r\n      totalClicks: { $inc: -cost },\r\n    });\r\n  },\r\n};\r\n\r\nexport default UniverseData;"],"mappings":"AAAA,KAAM,CAAAA,WAAW,CAAG,kCAAkC,CAEtD,KAAM,CAAAC,YAAY,CAAG,CACnBC,MAAM,CAAE,IAAI,CAEZ,KAAM,CAAAC,cAAcA,CAACD,MAAM,CAAE,CAC3B,IAAI,CAACA,MAAM,CAAGA,MAAM,CACpB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,WAAW,UAAS,CAClDO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEV,MAAO,CAAC,CAC1C,CAAC,CAAC,CACF,GAAI,CAACE,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9D,MAAO,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,WAAWA,CAAA,CAAG,CAClB,GAAI,CAAC,IAAI,CAACd,MAAM,CAAE,KAAM,IAAI,CAAAY,KAAK,CAAC,sBAAsB,CAAC,CACzD,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,WAAW,UAAS,CAClDO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAE,IAAI,CAACV,MAAO,CAAC,CAC/C,CAAC,CAAC,CACF,GAAI,CAACE,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5D,MAAO,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAE,cAAcA,CAACC,OAAO,CAAE,CAC5B,GAAI,CAAC,IAAI,CAAChB,MAAM,CAAE,KAAM,IAAI,CAAAY,KAAK,CAAC,sBAAsB,CAAC,CACzD,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIN,WAAW,YAAW,CACpDO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAE,IAAI,CAACV,MAAM,CAAEgB,OAAQ,CAAC,CACxD,CAAC,CAAC,CACF,GAAI,CAACd,QAAQ,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CAC/D,MAAO,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAI,oBAAoBA,CAACC,MAAM,CAAE,CACjC,MAAO,KAAI,CAACH,cAAc,CAAC,CAAEI,WAAW,CAAE,CAAEC,IAAI,CAAEF,MAAO,CAAE,CAAC,CAAC,CAC/D,CAAC,CAED,KAAM,CAAAG,SAASA,CAACC,SAAS,CAAE,CACzB,MAAO,KAAI,CAACP,cAAc,CAAC,CAAEQ,MAAM,CAAED,SAAU,CAAC,CAAC,CACnD,CAAC,CAED,KAAM,CAAAE,gBAAgBA,CAACC,SAAS,CAAEC,IAAI,CAAE,CACtC,MAAO,KAAI,CAACX,cAAc,CAAC,CACzB,IAAAX,MAAA,CAAIqB,SAAS,WAAU,CAAEL,IAAI,CAAE,CAAE,CAAC,CAClCD,WAAW,CAAE,CAAEC,IAAI,CAAE,CAACM,IAAK,CAC7B,CAAC,CAAC,CACJ,CACF,CAAC,CAED,cAAe,CAAA3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}